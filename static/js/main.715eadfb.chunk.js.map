{"version":3,"sources":["config.ts","components/WhatIKnow/WhatIKnowItem.tsx","common/styles.ts","components/About/EducationItem.tsx","components/About/About.tsx","components/Header/Navigation.tsx","components/Header/Header.tsx","components/WorkExperience/WorkplaceItem.tsx","components/WorkExperience/WorkExperience.tsx","components/WhatIKnow/WhatIKnow.tsx","components/WhatIKnow/WhatIKnowListGroupContainer.tsx","App.tsx","components/VolunteerWork/VolunteerItem.tsx","components/VolunteerWork/VolunteerWork.tsx","reportWebVitals.ts","index.tsx"],"names":["Theme","EWhatIKnowItemType","themeConfig","DESERT","color","main","theme","colors","orange","darker","AURORA","purple","ABSTRACT","config","StyledTitle","styled","div","StyledSecondaryTitle","StyledCommonSection","props","backgroundUrl","white","StyledBackgroundCover","fadeAmount","StyledBackgroundTopper","StyledParagraph","p","paddingTop","paddingBottom","StyledEducationItem","EducationItem","title","institute","startingYear","endingYear","StyledAbout","About","data","about","education","map","edu","Navigation","StyledHeader","StyledName","h1","StyledWorkTitle","h2","StyledImage","img","Header","name","showProfilePic","cvLink","src","colorScheme","style","_hover","_pressed","onClick","window","open","mt","variant","size","StyledWorkplaceItem","StyledWorkplaceLine","StyledWorkplaceTitle","span","StyledWorkplaceDates","WorkplaceItem","company","starting","ending","showWpName","isLast","toLowerCase","alt","WorkExperience","wp","index","showWorkplaceName","length","StyledWhatIKnowItem","StyledBadgeContainer","EWhatIKnowDisplay","WhatIKnowItem","logo","isCurrentlyUsing","gutter","hasArrow","label","bg","placement","StyledListGroupContainer","WhatIKnowListGroupContainer","group","item","StyledWhatIKnow","StyledWhatIKnowList","Module","WhatIKnow","display","useState","LIST","isList","setIsList","BOTH","Object","keys","key","whatIKnowTypeGroup","filter","wik","type","speed","pauseOnHover","StyledVolunteerItem","VolunteerItem","description","VolunteerWork","vi","StyledApp","App","header","modules","module","console","log","ABOUT","WORK_EXPERIENCE","WHAT_I_KNOW","VOLUNTEERING","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.715eadfb.chunk.js","sourcesContent":["import { theme } from \"@chakra-ui/react\"\r\n\r\nenum Theme {\r\n    DESERT = \"desert\",\r\n    AURORA = \"aurora\",\r\n    ABSTRACT = \"abstract\"\r\n}\r\n\r\nexport const themeConfig = {\r\n    [Theme.DESERT]: {\r\n        color: \"orange\",\r\n        main: theme.colors.orange[600],\r\n        darker: theme.colors.orange[800],\r\n    },\r\n    [Theme.AURORA]: {\r\n        color: \"purple\",\r\n        main: theme.colors.purple[600],\r\n        darker: theme.colors.purple[800],\r\n    },\r\n    [Theme.ABSTRACT]: {\r\n        color: \"purple\",\r\n        main: theme.colors.purple[600],\r\n        darker: theme.colors.purple[800],\r\n    }\r\n}\r\n\r\nexport const config = {\r\n    theme: Theme.ABSTRACT\r\n}","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Badge, Tooltip } from '@chakra-ui/react';\r\nimport { config, themeConfig } from '../../config';\r\n\r\nconst StyledWhatIKnowItem = styled.div`\r\n    margin: 0 2em;\r\n    position: relative;\r\n    > img {\r\n        width: 100px;\r\n        opacity: 0.8;\r\n        transition: .18s all;\r\n        filter: grayscale(90%);\r\n        &:hover {\r\n            opacity: 1;\r\n            filter: grayscale(0%);\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledBadgeContainer = styled.div`\r\n    position: absolute;\r\n    top: .25em;\r\n    left: .25em;\r\n    z-index: 100;\r\n`;\r\n\r\nexport enum EWhatIKnowItemType {\r\n    COMPONENT_FRAMRWORKS_LIBRARIES = 'Component frameworks / libraries',\r\n    TESTING_FRAMEWORKS = 'Testing frameworks',\r\n    BACKEND = 'Backend',\r\n    DATABASES = 'Databases',\r\n    UI_STYLING = 'UI and Styling',\r\n    UI_FRAMEWORKS = 'UI frameworks',\r\n    LANGUAGES_SUPERSETS = 'Languages / Supersets',\r\n}\r\n\r\nexport interface IWhatIKnowItem {\r\n    logo: string;\r\n    name: string;\r\n    type?: EWhatIKnowItemType;\r\n    isCurrentlyUsing?: boolean;\r\n}\r\n\r\nconst WhatIKnowItem = ({logo, name, isCurrentlyUsing = false}: IWhatIKnowItem) => {\r\n    return (\r\n        <StyledWhatIKnowItem>\r\n            {isCurrentlyUsing && <StyledBadgeContainer>\r\n                <Badge variant=\"solid\" colorScheme=\"red\">Using</Badge>\r\n            </StyledBadgeContainer>}\r\n            <Tooltip gutter={16} hasArrow label={name} bg={themeConfig[config.theme].darker} placement=\"top\">\r\n                <img src={`./assets/usages/${logo}.png`} alt={name} />   \r\n            </Tooltip>\r\n        </StyledWhatIKnowItem>\r\n    )\r\n}\r\n\r\nexport default WhatIKnowItem\r\n","import { theme } from '@chakra-ui/react';\r\nimport styled from '@emotion/styled'\r\nimport { config, themeConfig } from '../config';\r\n\r\ninterface IStyledCommonSectionsProps {\r\n    backgroundUrl?: string;\r\n}\r\n\r\ninterface IStyledBackgroundCoverProps {\r\n    fadeAmount?: number;\r\n}\r\n\r\nexport const StyledTitle = styled.div`\r\n    color: ${themeConfig[config.theme].main};\r\n    font-size: 25px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    padding-bottom: 8px;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const StyledSecondaryTitle = styled.div`\r\n    color: ${themeConfig[config.theme].main};\r\n    font-size: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const StyledCommonSection = styled.div<IStyledCommonSectionsProps>`\r\n    width: 100vw;\r\n    padding: 3em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    background: ${props => props.backgroundUrl ? `url('${props.backgroundUrl}')` : theme.colors.white};\r\n`;\r\n\r\nexport const StyledBackgroundCover = styled.div<IStyledBackgroundCoverProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${theme.colors.white};\r\n    opacity: ${props => props.fadeAmount ? 1 - (props.fadeAmount / 100) : 0.5};\r\n`;\r\n\r\nexport const StyledBackgroundTopper = styled.div`\r\n    position: relative;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\ninterface IStyledParagraphOverridePrpops {\r\n    paddingTop?: number;\r\n    paddingBottom?: number;\r\n}\r\n\r\nexport const StyledParagraph = styled.p<IStyledParagraphOverridePrpops>`\r\n    color: ${themeConfig[config.theme].darker};\r\n    text-align: center;\r\n    padding-top: ${props => `${props.paddingTop || 1}em`};\r\n    padding-bottom: ${props => `${props.paddingBottom || 1}em`};\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport interface IEducationItem {\r\n    title: string;\r\n    institute: string;\r\n    startingYear: string;\r\n    endingYear: string | null;\r\n}\r\n\r\nconst StyledEducationItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 1em;\r\n    h3 {\r\n        font-size: 18px;\r\n        margin-bottom: .5em;\r\n        font-weight: 600;\r\n    }\r\n    span {\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst EducationItem = ({title, institute, startingYear, endingYear}: IEducationItem) => {\r\n    return (\r\n        <StyledEducationItem>\r\n            <h3>{title}</h3>\r\n            <span>{institute}, {startingYear} - {endingYear}</span>\r\n        </StyledEducationItem>\r\n    )\r\n}\r\n\r\nexport default EducationItem\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { StyledTitle, StyledCommonSection, StyledParagraph, StyledSecondaryTitle } from '../../common/styles'\r\nimport EducationItem, { IEducationItem } from './EducationItem'\r\n\r\nexport interface IAboutProps {\r\n        type: string,\r\n        data: any,\r\n        title: string\r\n}\r\n\r\nconst StyledAbout = styled.div`\r\n    max-width: 1000px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst About = ({data, title}: IAboutProps) => {\r\n    return (\r\n        <StyledCommonSection>\r\n            <StyledAbout>\r\n                <StyledTitle>{title}</StyledTitle>\r\n                <StyledParagraph paddingTop={0}>{data.about}</StyledParagraph>\r\n                <StyledSecondaryTitle>{data.education.title}</StyledSecondaryTitle>\r\n                {data.education.data.map((edu: IEducationItem) => \r\n                    <EducationItem title={edu.title} institute={edu.institute} startingYear={edu.startingYear} endingYear={edu.endingYear} />\r\n                )}\r\n            </StyledAbout>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import { Button, theme } from '@chakra-ui/react'\r\nimport styled from '@emotion/styled'\r\nimport React from 'react'\r\nimport { config, themeConfig } from '../../config'\r\nimport Navigation from './Navigation'\r\n\r\ninterface IHeaderProps {\r\n    data: {\r\n        name: string,\r\n        title: string,\r\n        showProfilePic: boolean,\r\n        cvLink: string | null\r\n    }\r\n}\r\n\r\nconst StyledHeader = styled.div`\r\n    width: 100vw;\r\n    min-height: 50vh;\r\n    padding-top: 1em;\r\n    padding-bottom: 1em;\r\n    background: url(${`./assets/themes/${config.theme}/bg.jpg`});\r\n    background-size: cover;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-position: 0%;\r\n`\r\n\r\nconst StyledName = styled.h1`\r\n    color: ${theme.colors.white};\r\n    font-size: 50px;\r\n    font-weight: 400;\r\n`\r\n\r\nconst StyledWorkTitle = styled.h2`\r\n    color: ${theme.colors.white};\r\n    font-size: 25px;\r\n    font-weight: 200;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n`;\r\n\r\n\r\nconst Header = ({data: {name, title, showProfilePic, cvLink}}:IHeaderProps) => {\r\n    return (\r\n        <StyledHeader>\r\n            <Navigation />\r\n            {showProfilePic && <StyledImage src=\"./assets/profile.jpg\" />}\r\n            <StyledName>{name}</StyledName>\r\n            <StyledWorkTitle>{title}</StyledWorkTitle>\r\n            {cvLink && <Button colorScheme=\"gray\" style={{color: \"white\"}} _hover={{color: themeConfig[config.theme].darker}} _pressed={{color: themeConfig[config.theme].darker}} onClick={() => window.open(cvLink)} mt=\"4\" variant=\"outline\" size=\"md\">Download my CV</Button>}\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { config, themeConfig } from '../../config';\r\n\r\ninterface IWorkplaceItemProps {\r\n    company: string;\r\n    title: string;\r\n    starting: number;\r\n    ending: number | null;\r\n    showWpName?: boolean;\r\n    isLast?: boolean;\r\n}\r\n\r\nconst StyledWorkplaceItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    > img {\r\n        width: 200px;\r\n    }\r\n`;\r\n\r\nconst StyledWorkplaceLine = styled.div`\r\n    height: 100px;\r\n    width: 1px;\r\n    background-color: ${themeConfig[config.theme].main};\r\n    margin-top: 1em;\r\n`;\r\n\r\n\r\nconst StyledWorkplaceTitle = styled.span`\r\n    font-weight: 500;\r\n    padding-top: .5em;\r\n    padding-bottom: .5em;\r\n`;\r\n\r\n\r\nconst StyledWorkplaceDates = styled.div`\r\n    padding-top: .5em;\r\n    padding-bottom: .5em;\r\n`;\r\n\r\nconst WorkplaceItem = ({company, title, starting, ending, showWpName = false, isLast = false }: IWorkplaceItemProps) => {\r\n    return (\r\n        <StyledWorkplaceItem>\r\n            <img src={`./assets/logos/${company.toLowerCase()}.png`} alt=\"\" />\r\n            {showWpName && company}\r\n            <StyledWorkplaceTitle>{title}</StyledWorkplaceTitle>\r\n            <StyledWorkplaceDates>{starting} - {ending ?? 'Present'}</StyledWorkplaceDates>\r\n            {!isLast && <StyledWorkplaceLine />}\r\n        </StyledWorkplaceItem>\r\n    )\r\n}\r\n\r\nexport default WorkplaceItem\r\n","import React from 'react'\r\nimport { StyledBackgroundCover, StyledBackgroundTopper, StyledCommonSection, StyledTitle } from '../../common/styles'\r\nimport { config } from '../../config'\r\nimport Workplace from './WorkplaceItem'\r\n\r\nexport interface IWorkplace {\r\n    company: string;\r\n    title: string;\r\n    startingYear: number;\r\n    endingYear: number | null;\r\n    showWorkplaceName?: boolean;\r\n}\r\nexport interface IWorkExperienceProps {\r\n    type: string,\r\n    data: IWorkplace[],\r\n    title: string\r\n}\r\n\r\nconst WorkExperience = ({data, title}: IWorkExperienceProps) => {\r\n    return (\r\n        <StyledCommonSection backgroundUrl={`./assets/themes/${config.theme}/1.jpg`}>\r\n            <StyledBackgroundCover fadeAmount={40} />\r\n                <StyledBackgroundTopper>\r\n                <StyledTitle>{title}</StyledTitle>\r\n                {\r\n                    data.map((wp, index) => \r\n                        <Workplace key={index} company={wp.company} title={wp.title} starting={wp.startingYear} ending={wp.endingYear} showWpName={wp.showWorkplaceName} isLast={index === data.length-1}/>\r\n                    )\r\n                }\r\n            </StyledBackgroundTopper>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default WorkExperience\r\n","import { Button } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport Marquee from \"react-fast-marquee\";\r\nimport styled from 'styled-components';\r\nimport { StyledCommonSection, StyledTitle } from '../../common/styles';\r\nimport { config, themeConfig } from '../../config';\r\nimport WhatIKnowItem, { EWhatIKnowItemType, IWhatIKnowItem } from './WhatIKnowItem';\r\nimport WhatIKnowListGroupContainer from './WhatIKnowListGroupContainer';\r\n\r\nconst StyledWhatIKnow = styled.div`\r\n    margin: 3em 0;\r\n    width: 100%;\r\n`;\r\n\r\nconst StyledWhatIKnowList = styled.div`\r\n    margin-top: -1.5em;\r\n    width: 100%;\r\n`;\r\n\r\nenum EWhatIKnowDisplay {\r\n    LIST = \"list\",\r\n    MARQUEE = \"marquee\",\r\n    BOTH = \"both\"\r\n}\r\n\r\nexport interface IWhatIKnowProps {\r\n    type: string,\r\n    data: IWhatIKnowItem[],\r\n    display?: EWhatIKnowDisplay,\r\n    title: string\r\n}\r\n\r\nconst WhatIKnow = ({data, display, title}: IWhatIKnowProps) => {\r\n\r\n    const [isList, setIsList] = useState(display === EWhatIKnowDisplay.LIST);\r\n\r\n    return (\r\n        <StyledCommonSection>\r\n            <StyledTitle>{title}</StyledTitle>\r\n            {display === EWhatIKnowDisplay.BOTH && <Button colorScheme={themeConfig[config.theme].color} variant=\"outline\" size=\"xs\" onClick={() => setIsList(!isList)}>{!isList ? 'View as list' : 'View as marquee'}</Button>}\r\n            <StyledWhatIKnow>\r\n                {\r\n                !isList ?\r\n                <Marquee speed={50} pauseOnHover={true}>\r\n                    {data.map((item, index) => \r\n                        <WhatIKnowItem key={index} logo={item.logo} name={item.name} isCurrentlyUsing={item.isCurrentlyUsing} />\r\n                    )}\r\n                </Marquee> :\r\n                <StyledWhatIKnowList>\r\n                    {\r\n                        (Object.keys(EWhatIKnowItemType) as Array<keyof typeof EWhatIKnowItemType>).map((key, index) => {\r\n                            const whatIKnowTypeGroup = data.filter((wik) => wik.type === EWhatIKnowItemType[key]);\r\n                            return whatIKnowTypeGroup.length > 0 && <WhatIKnowListGroupContainer key={index} title={EWhatIKnowItemType[key]} group={whatIKnowTypeGroup}/>\r\n                        })\r\n                    }\r\n                </StyledWhatIKnowList>\r\n                }\r\n            </StyledWhatIKnow>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default WhatIKnow\r\n","import { Badge } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { StyledSecondaryTitle } from '../../common/styles';\r\nimport { IWhatIKnowItem } from './WhatIKnowItem';\r\n\r\ninterface IWhatIKnowListGroupContainerProps {\r\n    group: IWhatIKnowItem[];\r\n    title: string;\r\n}\r\n\r\nconst StyledListGroupContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-bottom: 1.5em;\r\n    > span {\r\n        margin: 0 .5em;\r\n    }\r\n`;\r\n\r\nconst WhatIKnowListGroupContainer = ({group, title}:IWhatIKnowListGroupContainerProps) => {\r\n    return (\r\n        <div>\r\n            <StyledSecondaryTitle>{title}</StyledSecondaryTitle>\r\n            <StyledListGroupContainer>\r\n                {\r\n                    group.map((item, index) => <span>{item.name} {item.isCurrentlyUsing && <Badge variant=\"solid\" colorScheme=\"red\">Using</Badge>}</span>)\r\n                }\r\n            </StyledListGroupContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatIKnowListGroupContainer\r\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport About, { IAboutProps } from './components/About/About';\nimport Header from './components/Header/Header';\nimport WorkExperience, { IWorkExperienceProps } from './components/WorkExperience/WorkExperience';\nimport WhatIKnow, { IWhatIKnowProps } from './components/WhatIKnow/WhatIKnow';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport VolunteerWork, { IVolunteerWorkProps } from './components/VolunteerWork/VolunteerWork';\nimport data from './data.json';\n\nconst StyledApp = styled.div`\n  width: 100vw;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport enum Module {\n  ABOUT = \"about\",\n  WORK_EXPERIENCE = \"workExperience\",\n  WHAT_I_KNOW = \"whatIKnow\",\n  VOLUNTEERING = \"volunteering\"\n}\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <StyledApp>\n        <Header data={data.header} />\n        {data.modules.map(module => {\n          console.log(module);\n          switch (module.type) {\n            case Module.ABOUT:\n              return <About {...module as IAboutProps} />\n            case Module.WORK_EXPERIENCE:\n              return <WorkExperience {...module as IWorkExperienceProps} />\n            case Module.WHAT_I_KNOW:\n              return <WhatIKnow {...module as IWhatIKnowProps} />\n            case Module.VOLUNTEERING:\n              return <VolunteerWork {...module as IVolunteerWorkProps} />\n            default:\n              return <></>\n          }\n        })}\n      </StyledApp>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport interface IVolunteerItemProps {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nconst StyledVolunteerItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 2em;\r\n    h3 {\r\n        font-size: 18px;\r\n        margin-bottom: .5em;\r\n        font-weight: 600;\r\n    }\r\n    span {\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst VolunteerItem = ({title, description}: IVolunteerItemProps) => {\r\n    return (\r\n        <StyledVolunteerItem>\r\n            <h3>{title}</h3>\r\n            <span>{description}</span>\r\n        </StyledVolunteerItem>\r\n\r\n\r\n)\r\n}\r\n\r\nexport default VolunteerItem\r\n","import React from 'react'\r\nimport { StyledBackgroundCover, StyledBackgroundTopper, StyledCommonSection, StyledTitle } from '../../common/styles'\r\nimport { config } from '../../config'\r\nimport VolunteerItem, { IVolunteerItemProps } from './VolunteerItem'\r\n\r\nexport interface IVolunteerWorkProps {\r\n    type: string,\r\n    data: IVolunteerItemProps[],\r\n    title: string\r\n}\r\n\r\nconst VolunteerWork = ({data, title}: IVolunteerWorkProps) => {\r\n    return (\r\n        <StyledCommonSection backgroundUrl={`./assets/themes/${config.theme}/2.jpg`}>\r\n                <StyledBackgroundCover fadeAmount={40} />\r\n                <StyledBackgroundTopper>\r\n                <StyledTitle>{title}</StyledTitle>\r\n                {data.map(vi => <VolunteerItem title={vi.title} description={vi.description} />)}\r\n            </StyledBackgroundTopper>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default VolunteerWork\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}