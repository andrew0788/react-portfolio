{"version":3,"sources":["config.ts","data.ts","common/styles.ts","components/About/EducationItem.tsx","components/About/About.tsx","components/Header/Navigation.tsx","components/Header/Header.tsx","components/WorkExperience/WorkplaceItem.tsx","components/WorkExperience/WorkExperience.tsx","components/WhatIKnow/WhatIKnowItem.tsx","components/WhatIKnow/WhatIKnowListGroupContainer.tsx","components/WhatIKnow/WhatIKnow.tsx","components/VolunteerWork/VolunteerItem.tsx","components/VolunteerWork/VolunteerWork.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Theme","EWhatIKnowItemType","themeConfig","DESERT","color","main","theme","colors","orange","darker","AURORA","purple","config","StyledTitle","styled","div","StyledSecondaryTitle","StyledCommonSection","props","backgroundUrl","white","StyledBackgroundCover","fadeAmount","StyledBackgroundTopper","StyledParagraph","p","StyledEducationItem","EducationItem","title","institute","startingYear","endingYear","StyledAbout","About","Navigation","StyledHeader","StyledName","h1","StyledWorkTitle","h2","StyledImage","img","Header","name","src","colorScheme","style","_hover","_pressed","mt","variant","size","whatIKnowList","logo","type","isCurrentlyUsing","Backend","Databases","workPlaces","company","showWorkplaceName","StyledWorkplaceItem","StyledWorkplaceLine","StyledWorkplaceTitle","span","StyledWorkplaceDates","WorkplaceItem","starting","ending","showWpName","isLast","toLowerCase","alt","WorkExperience","map","wp","index","length","StyledWhatIKnowItem","StyledBadgeContainer","WhatIKnowItem","gutter","hasArrow","label","bg","placement","StyledListGroupContainer","WhatIKnowListGroupContainer","group","item","StyledWhatIKnow","StyledWhatIKnowList","WhatIKnow","useState","isList","setIsList","onClick","Object","keys","key","whatIKnowTypeGroup","filter","wik","toString","speed","pauseOnHover","StyledVolunteerItem","VolunteerItem","description","VolunteerWork","StyledApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJAEKA,E,yFAAAA,K,gBAAAA,E,iBAAAA,M,KAKE,I,wBCNKC,EDMCC,GAAW,mBACnBF,EAAMG,OAAS,CACZC,MAAO,SACPC,KAAMC,QAAMC,OAAOC,OAAO,KAC1BC,OAAQH,QAAMC,OAAOC,OAAO,OAJZ,cAMnBR,EAAMU,OAAS,CACZN,MAAO,SACPC,KAAMC,QAAMC,OAAOI,OAAO,KAC1BF,OAAQH,QAAMC,OAAOI,OAAO,OATZ,GAaXC,EAAS,CAClBN,MAAON,EAAMG,QETJU,EAAcC,IAAOC,IAAV,qKACXb,EAAYU,EAAON,OAAOD,MAQ1BW,EAAuBF,IAAOC,IAAV,iKACpBb,EAAYU,EAAON,OAAOD,MAQ1BY,EAAsBH,IAAOC,IAAV,0NAQd,SAAAG,GAAK,OAAIA,EAAMC,cAAN,eAA8BD,EAAMC,cAApC,MAAwDb,QAAMC,OAAOa,SAGnFC,EAAwBP,IAAOC,IAAV,sLAOVT,QAAMC,OAAOa,OACtB,SAAAF,GAAK,OAAIA,EAAMI,WAAa,EAAKJ,EAAMI,WAAa,IAAO,MAG7DC,EAAyBT,IAAOC,IAAV,6NAYtBS,EAAkBV,IAAOW,EAAV,sHACfvB,EAAYU,EAAON,OAAOG,Q,OCvDjCiB,EAAsBZ,IAAOC,IAAV,4SAyBVY,EATO,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,WACpD,OACI,eAACL,EAAD,WACI,6BAAKE,IACL,iCAAOC,EAAP,KAAoBC,EAApB,MAAqCC,SCzB3CC,EAAclB,IAAOC,IAAV,kLAuBFkB,EAdD,WACV,OACI,cAAChB,EAAD,UACI,eAACe,EAAD,WACI,cAACnB,EAAD,oBACA,cAACW,EAAD,kPACA,cAACR,EAAD,wBACA,cAAC,EAAD,CAAeY,MAAM,0BAA0BC,UAAU,sBAAsBC,aAAc,KAAMC,WAAY,OAC/G,cAAC,EAAD,CAAeH,MAAM,gBAAgBC,UAAU,sBAAsBC,aAAc,KAAMC,WAAY,a,SCZtGG,EARI,WACf,OACI,yBCOFC,EAAerB,IAAOC,IAAV,+UAKuBH,EAAON,MAL9B,YAcZ8B,EAAatB,IAAOuB,GAAV,yFACH/B,QAAMC,OAAOa,OAKpBkB,EAAkBxB,IAAOyB,GAAV,yFACRjC,QAAMC,OAAOa,OAKpBoB,EAAc1B,IAAO2B,IAAV,4FAmBFC,EAZA,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMf,EAAwB,EAAxBA,MACnB,OACI,eAACO,EAAD,WACI,cAAC,EAAD,IACA,cAACK,EAAD,CAAaI,IAAI,yBACjB,cAACR,EAAD,UAAaO,IACb,cAACL,EAAD,UAAkBV,IAClB,cAAC,IAAD,CAAQiB,YAAY,OAAOC,MAAO,CAAC1C,MAAO,SAAU2C,OAAQ,CAAC3C,MAAOF,EAAYU,EAAON,OAAOG,QAASuC,SAAU,CAAC5C,MAAOF,EAAYU,EAAON,OAAOG,QAASwC,GAAG,IAAIC,QAAQ,UAAUC,KAAK,KAA1L,iC,SLlDAlD,O,0EAAAA,I,8CAAAA,I,qBAAAA,I,yBAAAA,I,sCAAAA,I,oCAAAA,I,qDAAAA,M,KAyBL,I,0BAAMmD,GAAkC,CAC3C,CACIC,KAAM,QACNV,KAAM,QACNW,KAAMrD,EAAmB,oCACzBsD,kBAAkB,GAEtB,CACIF,KAAM,UACNV,KAAM,UACNW,KAAMrD,EAAmB,oCACzBsD,kBAAkB,GAEtB,CACIF,KAAM,OACNV,KAAM,OACNW,KAAMrD,EAAmB,sBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,SACNV,KAAM,SACNW,KAAMrD,EAAmBuD,QACzBD,kBAAkB,GAEtB,CACIF,KAAM,oBACNV,KAAM,oBACNW,KAAMrD,EAAmB,kBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,KACNV,KAAM,aACNW,KAAMrD,EAAmB,yBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,aACNV,KAAM,aACNW,KAAMrD,EAAmB,yBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,OACNV,KAAM,OACNW,KAAMrD,EAAmB,yBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,QACNV,KAAM,QACNW,KAAMrD,EAAmBwD,UACzBF,kBAAkB,GAEtB,CACIF,KAAM,WACNV,KAAM,YACNW,KAAMrD,EAAmB,iBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,WACNV,KAAM,YACNW,KAAMrD,EAAmB,iBACzBsD,kBAAkB,GAEtB,CACIF,KAAM,MACNV,KAAM,cACNW,KAAMrD,EAAmB,iBACzBsD,kBAAkB,IAIbG,GAA2B,CACpC,CACIC,QAAS,YACT/B,MAAO,+BACPE,aAAc,KACdC,WAAY,KACZ6B,mBAAmB,GAEvB,CACID,QAAS,OACT/B,MAAO,qBACPE,aAAc,KACdC,WAAY,KACZ6B,mBAAmB,GAEvB,CACID,QAAS,UACT/B,MAAO,qBACPE,aAAc,KACdC,WAAY,KACZ6B,mBAAmB,GAEvB,CACID,QAAS,QACT/B,MAAO,4BACPE,aAAc,KACdC,WAAY,KACZ6B,mBAAmB,IMnHrBC,GAAsB/C,IAAOC,IAAV,gLAUnB+C,GAAsBhD,IAAOC,IAAV,kHAGDb,EAAYU,EAAON,OAAOD,MAK5C0D,GAAuBjD,IAAOkD,KAAV,sGAOpBC,GAAuBnD,IAAOC,IAAV,+EAiBXmD,GAZO,SAAC,GAAkG,IAAjGP,EAAgG,EAAhGA,QAAS/B,EAAuF,EAAvFA,MAAOuC,EAAgF,EAAhFA,SAAUC,EAAsE,EAAtEA,OAAsE,IAA9DC,kBAA8D,aAA1CC,cAA0C,SACpH,OACI,eAACT,GAAD,WACI,qBAAKjB,IAAG,yBAAoBe,EAAQY,cAA5B,QAAiDC,IAAI,KAC5DH,GAAcV,EACf,cAACI,GAAD,UAAuBnC,IACvB,eAACqC,GAAD,WAAuBE,EAAvB,aAAoCC,QAApC,IAAoCA,IAAU,cAC5CE,GAAU,cAACR,GAAD,QC3BTW,GAhBQ,WACnB,OACI,eAACxD,EAAD,CAAqBE,cAAa,0BAAqBP,EAAON,MAA5B,UAAlC,UACI,cAACe,EAAD,CAAuBC,WAAY,KAC/B,eAACC,EAAD,WACA,cAACV,EAAD,iCAEI6C,GAAWgB,KAAI,SAACC,EAAIC,GAAL,OACX,cAAC,GAAD,CAAuBjB,QAASgB,EAAGhB,QAAS/B,MAAO+C,EAAG/C,MAAOuC,SAAUQ,EAAG7C,aAAcsC,OAAQO,EAAG5C,WAAYsC,WAAYM,EAAGf,kBAAmBU,OAAQM,IAAUlB,GAAWmB,OAAO,GAArKD,a,gDCTlCE,GAAsBhE,IAAOC,IAAV,sSAenBgE,GAAuBjE,IAAOC,IAAV,2GAoBXiE,GAbO,SAAC,GAA4D,IAA3D3B,EAA0D,EAA1DA,KAAMV,EAAoD,EAApDA,KAAoD,IAA9CY,wBAA8C,SAC9E,OACI,eAACuB,GAAD,WACKvB,GAAoB,cAACwB,GAAD,UACjB,cAAC,KAAD,CAAO7B,QAAQ,QAAQL,YAAY,MAAnC,qBAEJ,cAAC,KAAD,CAASoC,OAAQ,GAAIC,UAAQ,EAACC,MAAOxC,EAAMyC,GAAIlF,EAAYU,EAAON,OAAOG,OAAQ4E,UAAU,MAA3F,SACI,qBAAKzC,IAAG,0BAAqBS,EAArB,QAAiCmB,IAAK7B,UCxBxD2C,GAA2BxE,IAAOC,IAAV,8MAwBfwE,GAbqB,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,MAAO5D,EAA6C,EAA7CA,MACzC,OACI,gCACI,cAACZ,EAAD,UAAuBY,IACvB,cAAC0D,GAAD,UAEQE,EAAMd,KAAI,SAACe,EAAMb,GAAP,OAAiB,iCAAOa,EAAK9C,KAAZ,IAAmB8C,EAAKlC,kBAAoB,cAAC,KAAD,CAAOL,QAAQ,QAAQL,YAAY,MAAnC,+BClBrF6C,GAAkB5E,IAAOC,IAAV,oEAKf4E,GAAsB7E,IAAOC,IAAV,yEAmCV6E,GA9BG,WAAO,IAAD,EAEQC,oBAAS,GAFjB,oBAEbC,EAFa,KAELC,EAFK,KAIpB,OACI,eAAC9E,EAAD,WACI,cAACJ,EAAD,oCACA,cAAC,IAAD,CAAQgC,YAAa3C,EAAYU,EAAON,OAAOF,MAAO8C,QAAQ,UAAUC,KAAK,KAAK6C,QAAS,kBAAMD,GAAWD,IAA5G,SAAuHA,EAA0B,kBAAjB,iBAChI,cAACJ,GAAD,UAEKI,EAMD,cAACH,GAAD,UAESM,OAAOC,KAAKjG,GAA+DyE,KAAI,SAACyB,EAAKvB,GAClF,IAAMwB,EAAqBhD,GAAciD,QAAO,SAACC,GAAD,OAASA,EAAIhD,OAASrD,EAAmBkG,MACzF,OAAOC,EAAmBvB,OAAS,GAAK,cAAC,GAAD,CAAyCjD,MAAOuE,EAAII,WAAYf,MAAOY,GAArCxB,QATtF,cAAC,KAAD,CAAS4B,MAAO,GAAIC,cAAc,EAAlC,SACKrD,GAAcsB,KAAI,SAACe,EAAMb,GAAP,OACf,cAAC,GAAD,CAA2BvB,KAAMoC,EAAKpC,KAAMV,KAAM8C,EAAK9C,KAAMY,iBAAkBkC,EAAKlC,kBAAhEqB,c,UCzBtC8B,GAAsB5F,IAAOC,IAAV,8SA2BV4F,GAXO,SAAC,GAA+C,IAA9C/E,EAA6C,EAA7CA,MAAOgF,EAAsC,EAAtCA,YAC3B,OACI,eAACF,GAAD,WACI,6BAAK9E,IACL,+BAAOgF,QCVJC,GAbO,WAClB,OACI,eAAC5F,EAAD,CAAqBE,cAAa,0BAAqBP,EAAON,MAA5B,UAAlC,UACQ,cAACe,EAAD,CAAuBC,WAAY,KACnC,eAACC,EAAD,WACA,cAACV,EAAD,6BACA,cAAC,GAAD,CAAee,MAAM,cAAcgF,YAAY,+DAC/C,cAAC,GAAD,CAAehF,MAAM,QAAQgF,YAAY,iDCHnDE,GAAYhG,IAAOC,IAAV,wIAsBAgG,OAdf,WACE,OACE,cAAC,KAAD,UACE,eAACD,GAAD,WACE,cAAC,EAAD,CAAQnE,KAAK,cAAcf,MAAM,iCACjC,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,UCXOoF,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ab57112d.chunk.js","sourcesContent":["import { theme } from \"@chakra-ui/react\"\r\n\r\nenum Theme {\r\n    DESERT = \"desert\",\r\n    AURORA = \"aurora\"\r\n}\r\n\r\nexport const themeConfig = {\r\n    [Theme.DESERT]: {\r\n        color: \"orange\",\r\n        main: theme.colors.orange[600],\r\n        darker: theme.colors.orange[800],\r\n    },\r\n    [Theme.AURORA]: {\r\n        color: \"purple\",\r\n        main: theme.colors.purple[600],\r\n        darker: theme.colors.purple[800],\r\n    }\r\n}\r\n\r\nexport const config = {\r\n    theme: Theme.DESERT\r\n}","\r\nexport enum EWhatIKnowItemType {\r\n    'Component frameworks / libraries',\r\n    'Testing frameworks',\r\n    'Backend',\r\n    'Databases',\r\n    'UI and Styling',\r\n    'UI frameworks',\r\n    'Languages / Supersets',\r\n}\r\n\r\nexport interface IWhatIKnowItem {\r\n    logo: string;\r\n    name: string;\r\n    type?: EWhatIKnowItemType;\r\n    isCurrentlyUsing?: boolean;\r\n}\r\n\r\nexport interface IWorkplace {\r\n    company: string;\r\n    title: string;\r\n    startingYear: number;\r\n    endingYear: number | null;\r\n    showWorkplaceName?: boolean;\r\n}\r\n\r\nexport const whatIKnowList: IWhatIKnowItem[] = [\r\n    {\r\n        logo: 'react',\r\n        name: 'React',\r\n        type: EWhatIKnowItemType['Component frameworks / libraries'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'angular',\r\n        name: 'Angular',\r\n        type: EWhatIKnowItemType['Component frameworks / libraries'],\r\n        isCurrentlyUsing: false\r\n    },\r\n    {\r\n        logo: 'jest',\r\n        name: 'Jest',\r\n        type: EWhatIKnowItemType['Testing frameworks'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'nodejs',\r\n        name: 'nodejs',\r\n        type: EWhatIKnowItemType.Backend,\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'styled-components',\r\n        name: 'Styled Components',\r\n        type: EWhatIKnowItemType['UI and Styling'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'js',\r\n        name: 'JavaScript',\r\n        type: EWhatIKnowItemType['Languages / Supersets'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'typescript',\r\n        name: 'TypeScript',\r\n        type: EWhatIKnowItemType['Languages / Supersets'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'java',\r\n        name: 'Java',\r\n        type: EWhatIKnowItemType['Languages / Supersets'],\r\n        isCurrentlyUsing: false\r\n    },\r\n    {\r\n        logo: 'mysql',\r\n        name: 'MySQL',\r\n        type: EWhatIKnowItemType.Databases,\r\n        isCurrentlyUsing: false\r\n    },\r\n    {\r\n        logo: 'fluentui',\r\n        name: 'Fluent UI',\r\n        type: EWhatIKnowItemType['UI frameworks'],\r\n        isCurrentlyUsing: true\r\n    },\r\n    {\r\n        logo: 'chakraui',\r\n        name: 'Chakra UI',\r\n        type: EWhatIKnowItemType['UI frameworks'],\r\n        isCurrentlyUsing: false\r\n    },\r\n    {\r\n        logo: 'mui',\r\n        name: 'Material UI',\r\n        type: EWhatIKnowItemType['UI frameworks'],\r\n        isCurrentlyUsing: false\r\n    }\r\n];\r\n\r\nexport const workPlaces: IWorkplace[] = [\r\n    {\r\n        company: \"Microsoft\",\r\n        title: \"Fullstack Software Enginneer\",\r\n        startingYear: 2020,\r\n        endingYear: null,\r\n        showWorkplaceName: false\r\n    },\r\n    {\r\n        company: \"AT&T\",\r\n        title: \"Front End Engineer\",\r\n        startingYear: 2019,\r\n        endingYear: 2020,\r\n        showWorkplaceName: false\r\n    },\r\n    {\r\n        company: \"Plus500\",\r\n        title: \"Front End Engineer\",\r\n        startingYear: 2017,\r\n        endingYear: 2019,\r\n        showWorkplaceName: false\r\n    },\r\n    {\r\n        company: \"Intel\",\r\n        title: \"Student Software Engineer\",\r\n        startingYear: 2017,\r\n        endingYear: 2017,\r\n        showWorkplaceName: false\r\n    }\r\n]\r\n\r\n","import { theme } from '@chakra-ui/react';\r\nimport styled from '@emotion/styled'\r\nimport { config, themeConfig } from '../config';\r\n\r\ninterface IStyledCommonSectionsProps {\r\n    backgroundUrl?: string;\r\n}\r\n\r\ninterface IStyledBackgroundCoverProps {\r\n    fadeAmount?: number;\r\n}\r\n\r\nexport const StyledTitle = styled.div`\r\n    color: ${themeConfig[config.theme].main};\r\n    font-size: 25px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    padding-bottom: 8px;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const StyledSecondaryTitle = styled.div`\r\n    color: ${themeConfig[config.theme].main};\r\n    font-size: 20px;\r\n    text-align: center;\r\n    font-weight: 500;\r\n    margin-top: 8px;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const StyledCommonSection = styled.div<IStyledCommonSectionsProps>`\r\n    width: 100vw;\r\n    padding: 3em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    background: ${props => props.backgroundUrl ? `url('${props.backgroundUrl}')` : theme.colors.white};\r\n`;\r\n\r\nexport const StyledBackgroundCover = styled.div<IStyledBackgroundCoverProps>`\r\n    position: absolute;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${theme.colors.white};\r\n    opacity: ${props => props.fadeAmount ? 1 - (props.fadeAmount / 100) : 0.5};\r\n`;\r\n\r\nexport const StyledBackgroundTopper = styled.div`\r\n    position: relative;\r\n    z-index: 100;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const StyledParagraph = styled.p`\r\n    color: ${themeConfig[config.theme].darker};\r\n    text-align: center;\r\n    padding-top: 1em;\r\n    padding-bottom: 1em;\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\ninterface IEducationItem {\r\n    title: string;\r\n    institute: string;\r\n    startingYear: number;\r\n    endingYear: number;\r\n}\r\n\r\nconst StyledEducationItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 2em;\r\n    h3 {\r\n        font-size: 18px;\r\n        margin-bottom: .5em;\r\n        font-weight: 600;\r\n    }\r\n    span {\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst EducationItem = ({title, institute, startingYear, endingYear}: IEducationItem) => {\r\n    return (\r\n        <StyledEducationItem>\r\n            <h3>{title}</h3>\r\n            <span>{institute}, {startingYear} - {endingYear}</span>\r\n        </StyledEducationItem>\r\n    )\r\n}\r\n\r\nexport default EducationItem\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { StyledTitle, StyledCommonSection, StyledParagraph, StyledSecondaryTitle } from '../../common/styles'\r\nimport EducationItem from './EducationItem'\r\n\r\nconst StyledAbout = styled.div`\r\n    max-width: 1000px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst About = () => {\r\n    return (\r\n        <StyledCommonSection>\r\n            <StyledAbout>\r\n                <StyledTitle>About</StyledTitle>\r\n                <StyledParagraph>I'm Nir, I hold a BSc in Information systems. I'm an avid learner, I like what I do and I'm not afraid of trying out new technologies and adopting them as I see fit. I currently work as a Full stack Engineer at Microsoft™.</StyledParagraph>\r\n                <StyledSecondaryTitle>Education</StyledSecondaryTitle>\r\n                <EducationItem title=\"BSc Information Systems\" institute=\"University of Haifa\" startingYear={2014} endingYear={2018} />\r\n                <EducationItem title=\"BA Psychology\" institute=\"The Open University\" startingYear={2020} endingYear={2022} />\r\n            </StyledAbout>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import { Button, theme } from '@chakra-ui/react'\r\nimport styled from '@emotion/styled'\r\nimport React from 'react'\r\nimport { config, themeConfig } from '../../config'\r\nimport Navigation from './Navigation'\r\n\r\ninterface IHeaderProps {\r\n    name: string;\r\n    title: string;\r\n}\r\n\r\nconst StyledHeader = styled.div`\r\n    width: 100vw;\r\n    min-height: 50vh;\r\n    padding-top: 1em;\r\n    padding-bottom: 1em;\r\n    background: url(${`./assets/themes/${config.theme}/bg.jpg`});\r\n    background-size: cover;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-position: 0%;\r\n`\r\n\r\nconst StyledName = styled.h1`\r\n    color: ${theme.colors.white};\r\n    font-size: 50px;\r\n    font-weight: 400;\r\n`\r\n\r\nconst StyledWorkTitle = styled.h2`\r\n    color: ${theme.colors.white};\r\n    font-size: 25px;\r\n    font-weight: 200;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n`;\r\n\r\n\r\nconst Header = ({name, title}:IHeaderProps) => {\r\n    return (\r\n        <StyledHeader>\r\n            <Navigation />\r\n            <StyledImage src=\"./assets/profile.jpg\" />\r\n            <StyledName>{name}</StyledName>\r\n            <StyledWorkTitle>{title}</StyledWorkTitle>\r\n            <Button colorScheme=\"gray\" style={{color: \"white\"}} _hover={{color: themeConfig[config.theme].darker}} _pressed={{color: themeConfig[config.theme].darker}} mt=\"4\" variant=\"outline\" size=\"md\">Download my CV</Button>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { config, themeConfig } from '../../config';\r\n\r\ninterface IWorkplaceItemProps {\r\n    company: string;\r\n    title: string;\r\n    starting: number;\r\n    ending: number | null;\r\n    showWpName?: boolean;\r\n    isLast?: boolean;\r\n}\r\n\r\nconst StyledWorkplaceItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    > img {\r\n        width: 200px;\r\n    }\r\n`;\r\n\r\nconst StyledWorkplaceLine = styled.div`\r\n    height: 100px;\r\n    width: 1px;\r\n    background-color: ${themeConfig[config.theme].main};\r\n    margin-top: 1em;\r\n`;\r\n\r\n\r\nconst StyledWorkplaceTitle = styled.span`\r\n    font-weight: 500;\r\n    padding-top: .5em;\r\n    padding-bottom: .5em;\r\n`;\r\n\r\n\r\nconst StyledWorkplaceDates = styled.div`\r\n    padding-top: .5em;\r\n    padding-bottom: .5em;\r\n`;\r\n\r\nconst WorkplaceItem = ({company, title, starting, ending, showWpName = false, isLast = false }: IWorkplaceItemProps) => {\r\n    return (\r\n        <StyledWorkplaceItem>\r\n            <img src={`./assets/logos/${company.toLowerCase()}.png`} alt=\"\" />\r\n            {showWpName && company}\r\n            <StyledWorkplaceTitle>{title}</StyledWorkplaceTitle>\r\n            <StyledWorkplaceDates>{starting} - {ending ?? 'Present'}</StyledWorkplaceDates>\r\n            {!isLast && <StyledWorkplaceLine />}\r\n        </StyledWorkplaceItem>\r\n    )\r\n}\r\n\r\nexport default WorkplaceItem\r\n","import React from 'react'\r\nimport { StyledBackgroundCover, StyledBackgroundTopper, StyledCommonSection, StyledTitle } from '../../common/styles'\r\nimport { config } from '../../config'\r\nimport { workPlaces } from '../../data'\r\nimport Workplace from './WorkplaceItem'\r\n\r\n\r\nconst WorkExperience = () => {\r\n    return (\r\n        <StyledCommonSection backgroundUrl={`./assets/themes/${config.theme}/1.jpg`}>\r\n            <StyledBackgroundCover fadeAmount={40} />\r\n                <StyledBackgroundTopper>\r\n                <StyledTitle>My Work Experience</StyledTitle>\r\n                {\r\n                    workPlaces.map((wp, index) => \r\n                        <Workplace key={index} company={wp.company} title={wp.title} starting={wp.startingYear} ending={wp.endingYear} showWpName={wp.showWorkplaceName} isLast={index === workPlaces.length-1}/>\r\n                    )\r\n                }\r\n            </StyledBackgroundTopper>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default WorkExperience\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { Badge, Tooltip } from '@chakra-ui/react';\r\nimport { config, themeConfig } from '../../config';\r\nimport { IWhatIKnowItem } from '../../data';\r\n\r\nconst StyledWhatIKnowItem = styled.div`\r\n    margin: 0 2em;\r\n    position: relative;\r\n    > img {\r\n        width: 100px;\r\n        opacity: 0.8;\r\n        transition: .18s all;\r\n        filter: grayscale(90%);\r\n        &:hover {\r\n            opacity: 1;\r\n            filter: grayscale(0%);\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledBadgeContainer = styled.div`\r\n    position: absolute;\r\n    top: .25em;\r\n    left: .25em;\r\n    z-index: 100;\r\n`;\r\n\r\nconst WhatIKnowItem = ({logo, name, isCurrentlyUsing = false}: IWhatIKnowItem) => {\r\n    return (\r\n        <StyledWhatIKnowItem>\r\n            {isCurrentlyUsing && <StyledBadgeContainer>\r\n                <Badge variant=\"solid\" colorScheme=\"red\">Using</Badge>\r\n            </StyledBadgeContainer>}\r\n            <Tooltip gutter={16} hasArrow label={name} bg={themeConfig[config.theme].darker} placement=\"top\">\r\n                <img src={`./assets/usages/${logo}.png`} alt={name} />   \r\n            </Tooltip>\r\n        </StyledWhatIKnowItem>\r\n    )\r\n}\r\n\r\nexport default WhatIKnowItem\r\n","import { Badge } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { StyledSecondaryTitle } from '../../common/styles'\r\nimport { IWhatIKnowItem } from '../../data';\r\n\r\ninterface IWhatIKnowListGroupContainerProps {\r\n    group: IWhatIKnowItem[];\r\n    title: string;\r\n}\r\n\r\nconst StyledListGroupContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    margin-bottom: 1.5em;\r\n    > span {\r\n        margin: 0 .5em;\r\n    }\r\n`;\r\n\r\nconst WhatIKnowListGroupContainer = ({group, title}:IWhatIKnowListGroupContainerProps) => {\r\n    return (\r\n        <div>\r\n            <StyledSecondaryTitle>{title}</StyledSecondaryTitle>\r\n            <StyledListGroupContainer>\r\n                {\r\n                    group.map((item, index) => <span>{item.name} {item.isCurrentlyUsing && <Badge variant=\"solid\" colorScheme=\"red\">Using</Badge>}</span>)\r\n                }\r\n            </StyledListGroupContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatIKnowListGroupContainer\r\n","import { Button } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\nimport Marquee from \"react-fast-marquee\";\r\nimport styled from 'styled-components';\r\nimport { StyledCommonSection, StyledTitle } from '../../common/styles';\r\nimport { config, themeConfig } from '../../config';\r\nimport { EWhatIKnowItemType, whatIKnowList } from '../../data';\r\nimport WhatIKnowItem from './WhatIKnowItem';\r\nimport WhatIKnowListGroupContainer from './WhatIKnowListGroupContainer';\r\n\r\nconst StyledWhatIKnow = styled.div`\r\n    margin: 3em 0;\r\n    width: 100%;\r\n`;\r\n\r\nconst StyledWhatIKnowList = styled.div`\r\n    margin-top: -1.5em;\r\n    width: 100%;\r\n`;\r\n\r\nconst WhatIKnow = () => {\r\n\r\n    const [isList, setIsList] = useState(false);\r\n\r\n    return (\r\n        <StyledCommonSection>\r\n            <StyledTitle>What I Know (and use)</StyledTitle>\r\n            <Button colorScheme={themeConfig[config.theme].color} variant=\"outline\" size=\"xs\" onClick={() => setIsList(!isList)}>{!isList ? 'View as list' : 'View as marquee'}</Button>\r\n            <StyledWhatIKnow>\r\n                {\r\n                !isList ?\r\n                <Marquee speed={50} pauseOnHover={true}>\r\n                    {whatIKnowList.map((item, index) => \r\n                        <WhatIKnowItem key={index} logo={item.logo} name={item.name} isCurrentlyUsing={item.isCurrentlyUsing} />\r\n                    )}\r\n                </Marquee> :\r\n                <StyledWhatIKnowList>\r\n                    {\r\n                        (Object.keys(EWhatIKnowItemType) as Array<keyof typeof EWhatIKnowItemType>).map((key, index) => {\r\n                            const whatIKnowTypeGroup = whatIKnowList.filter((wik) => wik.type === EWhatIKnowItemType[key]);\r\n                            return whatIKnowTypeGroup.length > 0 && <WhatIKnowListGroupContainer key={index} title={key.toString()} group={whatIKnowTypeGroup}/>\r\n                        })\r\n                    }\r\n                </StyledWhatIKnowList>\r\n                }\r\n            </StyledWhatIKnow>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default WhatIKnow\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\ninterface IVolunteerItemProps {\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nconst StyledVolunteerItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 2em;\r\n    h3 {\r\n        font-size: 18px;\r\n        margin-bottom: .5em;\r\n        font-weight: 600;\r\n    }\r\n    span {\r\n        font-size: 15px;\r\n    }\r\n`;\r\n\r\nconst VolunteerItem = ({title, description}: IVolunteerItemProps) => {\r\n    return (\r\n        <StyledVolunteerItem>\r\n            <h3>{title}</h3>\r\n            <span>{description}</span>\r\n        </StyledVolunteerItem>\r\n\r\n\r\n)\r\n}\r\n\r\nexport default VolunteerItem\r\n","import React from 'react'\r\nimport { StyledBackgroundCover, StyledBackgroundTopper, StyledCommonSection, StyledTitle } from '../../common/styles'\r\nimport { config } from '../../config'\r\nimport VolunteerItem from './VolunteerItem'\r\n\r\nconst VolunteerWork = () => {\r\n    return (\r\n        <StyledCommonSection backgroundUrl={`./assets/themes/${config.theme}/2.jpg`}>\r\n                <StyledBackgroundCover fadeAmount={40} />\r\n                <StyledBackgroundTopper>\r\n                <StyledTitle>Volunteer Work</StyledTitle>\r\n                <VolunteerItem title=\"Tech-Career\" description=\"Tutoring and mentoring students in Web and other CS topics\" />\r\n                <VolunteerItem title=\"Sahar\" description=\"Building a landing page for the group\" />\r\n            </StyledBackgroundTopper>\r\n        </StyledCommonSection>\r\n    )\r\n}\r\n\r\nexport default VolunteerWork\r\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport About from './components/About/About';\nimport Header from './components/Header/Header';\nimport WorkExperience from './components/WorkExperience/WorkExperience';\nimport WhatIKnow from './components/WhatIKnow/WhatIKnow';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport VolunteerWork from './components/VolunteerWork/VolunteerWork';\n\nconst StyledApp = styled.div`\n  width: 100vw;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <StyledApp>\n        <Header name=\"Nir Tzezana\" title=\"Full Stack Software Engineer\" />\n        <About />\n        <WorkExperience />\n        <WhatIKnow />\n        <VolunteerWork />\n      </StyledApp>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}